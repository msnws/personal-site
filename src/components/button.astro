<button>
    <span class="button-text"><slot /></span>
</button>

<style>
    button {
        background-color: transparent;
        color: #e8d9c4;
        border: 1px solid #e8d9c4;
        padding: 20px 30px;
        border-radius: 5px;
        cursor: pointer;
        font-family: "Poppins", sans-serif;
        font-size: 16px;
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
        z-index: 1;
        width: 100%;
    }

    button::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 0%;
        height: 100%;
        background-color: #e8d9c4;
        transform: skewX(-25deg);
        transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        z-index: -1;
    }

    button:hover {
        color: #1a1a1a;
        box-shadow: 0 0 15px rgba(232, 217, 196, 0.5);
        transform: translateY(-3px);
    }

    button:hover::before {
        width: 100%;
    }

    button:active {
        transform: translateY(0);
    }

    .button-text {
        position: relative;
        z-index: 2;
    }

    @keyframes pulse {
        0% {
            box-shadow: 0 0 0 0 rgba(232, 217, 196, 0.6);
        }
        70% {
            box-shadow: 0 0 0 10px rgba(232, 217, 196, 0);
        }
        100% {
            box-shadow: 0 0 0 0 rgba(232, 217, 196, 0);
        }
    }

    button:focus {
        outline: none;
        animation: pulse 1.5s infinite;
    }
</style>

<script>
    // Add ripple effect on click
    document.addEventListener("DOMContentLoaded", () => {
        const buttons = document.querySelectorAll("button");

        buttons.forEach((button) => {
            button.addEventListener("click", function (e) {
                const x = e.clientX - e.target.getBoundingClientRect().left;
                const y = e.clientY - e.target.getBoundingClientRect().top;

                const ripple = document.createElement("span");
                ripple.style.position = "absolute";
                ripple.style.backgroundColor = "rgba(255, 255, 255, 0.7)";
                ripple.style.borderRadius = "50%";
                ripple.style.width = "100px";
                ripple.style.height = "100px";
                ripple.style.left = x + "px";
                ripple.style.top = y + "px";
                ripple.style.transform = "translate(-50%, -50%) scale(0)";
                ripple.style.animation = "ripple 0.6s linear";
                ripple.style.pointerEvents = "none";

                this.appendChild(ripple);

                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });
    });

    // Add keyframe for ripple effect
    if (!document.querySelector("style#ripple-style")) {
        const style = document.createElement("style");
        style.id = "ripple-style";
        style.textContent = `
            @keyframes ripple {
                to {
                    transform: translate(-50%, -50%) scale(4);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    }
</script>
